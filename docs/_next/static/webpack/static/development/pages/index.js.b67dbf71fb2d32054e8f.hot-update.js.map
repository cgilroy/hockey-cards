{"version":3,"file":"static/webpack/static/development/pages/index.js.b67dbf71fb2d32054e8f.hot-update.js","sources":["webpack:///./components/CardsContainer.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Card from './Card.js'\nimport Deck from './Deck.js'\nimport ClosedPack from './ClosedPack.js'\nimport PlayerPicker from './PlayerPicker.js'\nimport _JSXStyle from 'styled-jsx/style'\n// const url = \"https://nhl.bamcontent.com/images/headshots/current/168x168/\"+props.thirdStar.id+\".jpg\"\nconst CardsContainer = (props) => {\n  const [cards, updateCards] = useState([])\n  const teamID = 14;\n  const [animatePackOpen, updateAnimatePackOpen] = useState(false)\n  useEffect(\n    () => {\n      const teamUrls = \"https://statsapi.web.nhl.com/api/v1/teams/\" //+teamID+\"/roster\"\n      var playerData = []\n      fetch(teamUrls).then(teamResults => teamResults.json()).then(teamJSON => teamJSON.teams.map(team => team.id)).then(teamIDArray => {\n        var teamRosterPromises = []\n        teamIDArray.map(id => {\n          teamRosterPromises.push(fetch(\"https://statsapi.web.nhl.com/api/v1/teams/\"+id+\"/roster\").then(results => results.json()).then(json => {\n            return json.roster.map(player => {\n              player.teamID = id\n              return player\n            })\n          }))\n        })\n        Promise.all(teamRosterPromises).then(rosterArray => {\n          let playerList = [].concat(...rosterArray);\n          updateCards(<PlayerPicker playerList={playerList} doneLoad={props.doneLoad}/>)\n        })\n      })\n    },\n    []\n  )\n  const openPack = () => {\n    updatePackOpen(true)\n  }\n  return (\n    <div style={{width:'100%',height:\"100%\",overflow:'hidden',position:'relative',display:'flex',alignItems:'center'}}>\n      {cards}\n    </div>\n  )\n}\n\nexport default CardsContainer\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}