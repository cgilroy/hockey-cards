{"version":3,"file":"static/webpack/static/development/pages/index.js.623d718352170983df66.hot-update.js","sources":["webpack:///./components/App.js"],"sourcesContent":["import CardsContainer from './CardsContainer.js'\nimport ClosedPack from './ClosedPack.js'\nimport _JSXStyle from 'styled-jsx/style'\nimport {useState,useEffect} from 'react'\n\nexport default function App() {\n  const [packState, updatePack] = useState('closed')\n  const [buttonState, updateButtonState] = useState('open')\n  const [showPack, updateShowPack] = useState(true)\n  const [showCards, updateShowCards] = useState(false)\n  const [isLoading, updateIsLoading] = useState(false)\n  const [cardsContainer, updateCardsContainer] = useState()\n  const loadPack = () => {\n    console.log('loadPack')\n    updateIsLoading(true)\n    updateButtonState('')\n    updateCardsContainer(<CardsContainer doneLoad={doneLoad}/>)\n    console.log('immediatecardcont',cardsContainer)\n  }\n\n  const doneLoad = () => {\n    console.log('doneLoad')\n    updateIsLoading(false)\n    updatePack('open')\n  }\n\n  const reset = () => {\n    updateIsLoading(false)\n    updatePack('closed')\n    console.log(packState)\n    updateShowPack(true)\n    updateShowCards(false)\n    updateCardsContainer('')\n    updateButtonState('open')\n  }\n\n  const doneAnimation = (e) => {\n    console.log('doneAnimation',e.target)\n    updateShowCards(true)\n    updateButtonState('reset')\n    // updateShowPack(false)\n  }\n  console.log('render-app',showCards)\n  const button = () => {\n\n    console.log(buttonState)\n    let buttonStyle = (\n      <style jsx>{`\n      .btn {\n        position: relative;\n        display: block;\n        padding: 0;\n        cursor: pointer;\n        overflow: hidden;\n        min-width: 80px;\n        border-width: 0;\n        outline: none;\n        border-radius: 2px;\n        box-shadow: 0 1px 4px rgba(0, 0, 0, .6);\n        z-index: 99999;\n        background-color: #2ecc71;\n        color: #ecf0f1;\n        animation: pulse 1s infinite;\n        transition: background-color .3s;\n      }\n      @keyframes pulse\n      {\n           0% {\n                transform: scale(1)\n           }\n           50% {\n                transform: scale(1.1)\n           }\n           100% {\n                transform: scale(1)\n           }\n      }\n\n      .btn:hover, .btn:focus {\n        background-color: #27ae60;\n      }\n\n      .btn > * {\n        position: relative;\n      }\n\n      .btn span {\n        display: block;\n        padding: 12px 24px;\n      }\n\n      .btn:before {\n        content: \"\";\n\n        position: absolute;\n        top: 50%;\n        left: 50%;\n\n        display: block;\n        width: 0;\n        padding-top: 0;\n\n        border-radius: 100%;\n\n        background-color: rgba(236, 240, 241, .3);\n\n        -webkit-transform: translate(-50%, -50%);\n        -moz-transform: translate(-50%, -50%);\n        -ms-transform: translate(-50%, -50%);\n        -o-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n      }\n\n      .btn:active:before {\n        width: 120%;\n        padding-top: 120%;\n\n        transition: width .2s ease-out, padding-top .2s ease-out;\n      }\n      `}</style>\n    )\n    let resetStyle = (\n      <style jsx>{`\n        .btn {\n          top: 0;\n          position: absolute;\n          justify-content: center;\n          align-items: center;\n          margin-top: 10px;\n        }\n        `}\n      </style>\n    )\n    if (buttonState === 'open') {\n      return <div className=\"buttonRow__button btn\" onClick={loadPack} >{buttonStyle}<span>OPEN</span></div>\n    } else if (buttonState === 'reset') {\n      return <div className=\"buttonRow__button btn\" onClick={reset} >{buttonStyle}{resetStyle}<span>RESET</span></div>\n    } else {\n      return ''\n    }\n  }\n  let displayCards = showCards ? {height:'100%',width:'100%'} : {display:'none'}\n\n  return (\n    <div className=\"app-container\">\n      {button()}\n      {isLoading && <div className=\"loading\"></div>}\n      <div style={displayCards}>{cardsContainer}</div>\n      {showPack && <ClosedPack packState={packState} doneAnimation={doneAnimation}/>}\n      <style jsx>{`\n        .app-container {\n          width: 100vw;\n          height: 100vh;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          background: lightblue;\n          position: relative;\n          overflow: hidden;\n        }\n        .buttonRow {\n          width: 100%;\n          display: flex;\n\n        }\n\n        .loading {\n          height: 8px;\n          width: 200px;\n          position: relative;\n          overflow: hidden;\n          background-color: #ddd;\n          z-index: 999;\n          border: 1px solid #eee\n        }\n        .loading:before{\n          display: block;\n          position: absolute;\n          content: \"\";\n          left: -200px;\n          width: 20px;\n          height: 8px;\n          background-color: #2980b9;\n          animation: loading 2s linear infinite;\n        }\n\n        @keyframes loading {\n            from {left: -20px; width: 30%;}\n            50% {width: 30%;}\n            70% {width: 70%;}\n            80% { left: 50%;}\n            95% {left: 120%;}\n            to {left: 100%;}\n        }\n        @keyframes spin {\n          0% {\n            transform: rotate(0deg);\n          }\n          100% {\n            transform: rotate(360deg);\n          }\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0EA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AA6DA;;;;A","sourceRoot":""}