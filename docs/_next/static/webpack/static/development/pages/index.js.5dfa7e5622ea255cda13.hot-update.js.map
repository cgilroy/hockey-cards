{"version":3,"file":"static/webpack/static/development/pages/index.js.5dfa7e5622ea255cda13.hot-update.js","sources":["webpack:///./components/PlayerPicker.js"],"sourcesContent":["import {useState,useEffect} from 'react'\nimport Deck from './Deck.js'\nconst PlayerPicker = (props) => {\n  var outputPlayers = []\n  while(outputPlayers.length < 10){\n      var r = Math.floor(Math.random()*(props.playerList.length-1)) + 1;\n      if(outputPlayers.indexOf(r) === -1) outputPlayers.push(r);\n  }\n\n  const [cards,setCards] = useState('')\n\n  useEffect(\n    () => {\n      var picPromises = []\n      var playerData = []\n      var playerPromises = []\n      outputPlayers.map(index => {\n        // let actionShot = \"https://nhl.bamcontent.com/images/actionshots/\" + player.person.id + \".jpg\"\n        // let headShot = \"https://nhl.bamcontent.com/images/headshots/current/168x168/\"+player.person.id+\".jpg\"\n        let name = props.playerList[index].person.fullName\n        let position = props.playerList[index].position.abbreviation\n        let number = props.playerList[index].jerseyNumber\n        let teamID = props.playerList[index].teamID\n        playerData.push({name:name,position:position,number:number,teamID:teamID})\n        let playerLink = props.playerList[index].person.link\n        picPromises.push(\n          new Promise((resolve, reject) => {\n            let img = new Image()\n            img.onload = () => {return img}\n            // img.onerror = () => resolve(img)\n            img.src = \"https://nhl.bamcontent.com/images/actionshots/\" + props.playerList[index].person.id + \".jpg\"\n          }).then(img => {\n            let morePlayerData = fetch('https://statsapi.web.nhl.com'+playerLink).then(results => results.json()).then(json => {\n              return json\n            })\n          })\n        )\n        console.log('picPromises',picPromises)\n        playerPromises.push(\n          new Promise((resolve, reject) => {\n            let morePlayerData = fetch('https://statsapi.web.nhl.com'+playerLink).then(results => results.json()).then(json => resolve(json))\n          })\n        )\n\n      })\n        Promise.all(picPromises).then(cards => {\n          console.log('cards',cards)\n            setCards(<Deck cards={cards} playerData={playerData}/>)\n            props.doneLoad()\n        })\n    },[]\n  )\n\n  return(cards)\n}\n\nexport default PlayerPicker\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;A","sourceRoot":""}